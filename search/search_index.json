{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"101 Days of AWS Welcome to the 101 Days of AWS series, which is about learning something new about AWS every weekday. Tweet with the tag #101DaysofAWS About this series So I have decided to work on AWS for 100 days continously and record my journey. This repository contains a structured learning path designed to help learners progress from beginner to advanced level in AWS. The path is divided into 101 days, with each day containing a set of tasks and challenges that build on the previous day's concepts. The repository includes a variety of resources, including tutorials, exercises, videos, and sample projects, that cover a wide range of AWS services and features, including EC2, S3, Lambda, CloudFormation, and more. Daily chapters Day1 - Introduction to AWS Day1 - Introduction to AWS Day1 - Introduction to AWS Day1 - Introduction to AWS Day1 - Introduction to AWS Day1 - Introduction to AWS","title":"Home"},{"location":"#101-days-of-aws","text":"Welcome to the 101 Days of AWS series, which is about learning something new about AWS every weekday. Tweet with the tag #101DaysofAWS","title":"101 Days of AWS"},{"location":"#about-this-series","text":"So I have decided to work on AWS for 100 days continously and record my journey. This repository contains a structured learning path designed to help learners progress from beginner to advanced level in AWS. The path is divided into 101 days, with each day containing a set of tasks and challenges that build on the previous day's concepts. The repository includes a variety of resources, including tutorials, exercises, videos, and sample projects, that cover a wide range of AWS services and features, including EC2, S3, Lambda, CloudFormation, and more.","title":"About this series"},{"location":"#daily-chapters","text":"Day1 - Introduction to AWS Day1 - Introduction to AWS Day1 - Introduction to AWS Day1 - Introduction to AWS Day1 - Introduction to AWS Day1 - Introduction to AWS","title":"Daily chapters"},{"location":"dailynotes/01_introduction/D1-Introduction-to-AWS/","text":"Introduction to AWS Day 1 Goals [ ] Get to know more about AWS [ ] Create an AWS account [ ] Go to IAM and secure your Root account [ ] Create a seperate account for Console access What is AWS? Amazon Web Services (AWS) 1 is a cloud computing 2 platform provided by Amazon, offering a wide range of services to individuals, organizations, and governments. It is a comprehensive, secure, and scalable platform that enables customers to build, deploy, and manage applications and services with ease and flexibility. AWS Services AWS provides over 200 fully featured services that span computing, storage, databases, analytics, machine learning, Internet of Things (IoT), security, and more. Some of the popular services offered by AWS include: Amazon Elastic Compute Cloud (EC2) Amazon Simple Storage Service (S3) Amazon Relational Database Service (RDS) Amazon DynamoDB Amazon Lambda Amazon CloudFront Amazon Virtual Private Cloud (VPC) Amazon Elastic Block Store (EBS) Benefits of AWS AWS offers several benefits to its customers, including: Scalability: AWS enables customers to scale their resources up or down based on their requirements, allowing them to meet their changing business needs and control costs effectively. Security: AWS provides a secure and compliant platform with features such as encryption, identity and access management, and monitoring to ensure data protection and compliance with industry standards. Cost-effectiveness: AWS offers a pay-as-you-go pricing model, enabling customers to pay only for what they use and avoid upfront costs and long-term commitments. Reliability: AWS provides high availability, durability, and fault tolerance, ensuring that applications and services are always up and running. Flexibility: AWS enables customers to choose the tools, programming languages, operating systems, and databases they prefer, giving them the freedom to build and run their applications and services as they like. Getting Started with AWS To get started with AWS, customers can create an AWS account and access the AWS Management Console, which provides a web-based interface to access and manage AWS services. AWS also offers various SDKs and APIs for developers to build applications and services that interact with AWS services programmatically. In addition, AWS provides a wealth of resources to help customers learn about AWS and develop their skills, including documentation, training courses, certification programs, forums, and support services. Creating your Account with AWS Go to the AWS website at https://aws.amazon.com/. Click on the \"Create an AWS Account\" button located in the top right corner of the page. Enter your email address, a password, and your AWS account name, then click on \"Continue\". Enter your personal information, including your name, company name (if applicable), address, and phone number. Select your payment method, which can be a credit card, debit card, or bank account. Note that some AWS services offer a free tier with limited usage. Enter your billing address and click on \"Verify and Add\". Review the AWS Customer Agreement and click on \"Create Account and Continue\". AWS will then send a verification code to your email address. Enter the verification code in the provided field and click on \"Verify\". You will then be prompted to choose a support plan, which can be Basic, Developer, Business, or Enterprise. Select the plan that best suits your needs and click on \"Continue\". AWS will then redirect you to the AWS Management Console, where you can access and manage your AWS services. Account security Log in to your AWS account and navigate to the AWS Management Console. Click on the Services dropdown menu and select IAM under the Security, Identity, & Compliance section. In the IAM dashboard, you can create and manage IAM users, groups, and roles to control access to your AWS resources. Secure Access to your Root user account To secure your account, you have to configure multi-factor authentication (MFA) for IAM users and the root account. Create a seperate user for console access Click on the \"Add user\" button to create a new IAM user for console access. Enter a name for the new IAM user and select \"Programmatic access\" and \"AWS Management Console access\" as the access type. Create a password for the new IAM user or let AWS generate one for you, and then click on \"Next: Permissions\". Assign the necessary permissions to the new IAM user, either by adding them to an existing IAM group or by creating a new IAM policy. Review the permissions and click on \"Next: Tags\" to add optional metadata tags to the new IAM user. Review the tags and click on \"Next: Review\" to review the IAM user's settings. Review the settings and click on \"Create user\" to create the new IAM user. Note down the IAM user's console login URL, which should be in the format of https://ACCOUNT-ID.signin.aws.amazon.com/console/. Reference Links AWS Homepage \u21a9 Day 2- What is Cloud Computing \u21a9","title":"Introduction to AWS"},{"location":"dailynotes/01_introduction/D1-Introduction-to-AWS/#introduction-to-aws","text":"","title":"Introduction to AWS"},{"location":"dailynotes/01_introduction/D1-Introduction-to-AWS/#day-1-goals","text":"[ ] Get to know more about AWS [ ] Create an AWS account [ ] Go to IAM and secure your Root account [ ] Create a seperate account for Console access","title":"Day 1 Goals"},{"location":"dailynotes/01_introduction/D1-Introduction-to-AWS/#what-is-aws","text":"Amazon Web Services (AWS) 1 is a cloud computing 2 platform provided by Amazon, offering a wide range of services to individuals, organizations, and governments. It is a comprehensive, secure, and scalable platform that enables customers to build, deploy, and manage applications and services with ease and flexibility.","title":"What is AWS?"},{"location":"dailynotes/01_introduction/D1-Introduction-to-AWS/#aws-services","text":"AWS provides over 200 fully featured services that span computing, storage, databases, analytics, machine learning, Internet of Things (IoT), security, and more. Some of the popular services offered by AWS include: Amazon Elastic Compute Cloud (EC2) Amazon Simple Storage Service (S3) Amazon Relational Database Service (RDS) Amazon DynamoDB Amazon Lambda Amazon CloudFront Amazon Virtual Private Cloud (VPC) Amazon Elastic Block Store (EBS)","title":"AWS Services"},{"location":"dailynotes/01_introduction/D1-Introduction-to-AWS/#benefits-of-aws","text":"AWS offers several benefits to its customers, including: Scalability: AWS enables customers to scale their resources up or down based on their requirements, allowing them to meet their changing business needs and control costs effectively. Security: AWS provides a secure and compliant platform with features such as encryption, identity and access management, and monitoring to ensure data protection and compliance with industry standards. Cost-effectiveness: AWS offers a pay-as-you-go pricing model, enabling customers to pay only for what they use and avoid upfront costs and long-term commitments. Reliability: AWS provides high availability, durability, and fault tolerance, ensuring that applications and services are always up and running. Flexibility: AWS enables customers to choose the tools, programming languages, operating systems, and databases they prefer, giving them the freedom to build and run their applications and services as they like.","title":"Benefits of AWS"},{"location":"dailynotes/01_introduction/D1-Introduction-to-AWS/#getting-started-with-aws","text":"To get started with AWS, customers can create an AWS account and access the AWS Management Console, which provides a web-based interface to access and manage AWS services. AWS also offers various SDKs and APIs for developers to build applications and services that interact with AWS services programmatically. In addition, AWS provides a wealth of resources to help customers learn about AWS and develop their skills, including documentation, training courses, certification programs, forums, and support services.","title":"Getting Started with AWS"},{"location":"dailynotes/01_introduction/D1-Introduction-to-AWS/#creating-your-account-with-aws","text":"Go to the AWS website at https://aws.amazon.com/. Click on the \"Create an AWS Account\" button located in the top right corner of the page. Enter your email address, a password, and your AWS account name, then click on \"Continue\". Enter your personal information, including your name, company name (if applicable), address, and phone number. Select your payment method, which can be a credit card, debit card, or bank account. Note that some AWS services offer a free tier with limited usage. Enter your billing address and click on \"Verify and Add\". Review the AWS Customer Agreement and click on \"Create Account and Continue\". AWS will then send a verification code to your email address. Enter the verification code in the provided field and click on \"Verify\". You will then be prompted to choose a support plan, which can be Basic, Developer, Business, or Enterprise. Select the plan that best suits your needs and click on \"Continue\". AWS will then redirect you to the AWS Management Console, where you can access and manage your AWS services.","title":"Creating your Account with AWS"},{"location":"dailynotes/01_introduction/D1-Introduction-to-AWS/#account-security","text":"Log in to your AWS account and navigate to the AWS Management Console. Click on the Services dropdown menu and select IAM under the Security, Identity, & Compliance section. In the IAM dashboard, you can create and manage IAM users, groups, and roles to control access to your AWS resources.","title":"Account security"},{"location":"dailynotes/01_introduction/D1-Introduction-to-AWS/#secure-access-to-your-root-user-account","text":"To secure your account, you have to configure multi-factor authentication (MFA) for IAM users and the root account.","title":"Secure Access to your Root user account"},{"location":"dailynotes/01_introduction/D1-Introduction-to-AWS/#create-a-seperate-user-for-console-access","text":"Click on the \"Add user\" button to create a new IAM user for console access. Enter a name for the new IAM user and select \"Programmatic access\" and \"AWS Management Console access\" as the access type. Create a password for the new IAM user or let AWS generate one for you, and then click on \"Next: Permissions\". Assign the necessary permissions to the new IAM user, either by adding them to an existing IAM group or by creating a new IAM policy. Review the permissions and click on \"Next: Tags\" to add optional metadata tags to the new IAM user. Review the tags and click on \"Next: Review\" to review the IAM user's settings. Review the settings and click on \"Create user\" to create the new IAM user. Note down the IAM user's console login URL, which should be in the format of https://ACCOUNT-ID.signin.aws.amazon.com/console/.","title":"Create a seperate user for console access"},{"location":"dailynotes/01_introduction/D1-Introduction-to-AWS/#reference-links","text":"AWS Homepage \u21a9 Day 2- What is Cloud Computing \u21a9","title":"Reference Links"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/","text":"Cloud Computing Day 2 Goals [ ] Understand what are the differences between a private data center and Cloud [ ] Understand the NIST definition of Cloud Computing [ ] 5-4-3 Model of Cloud Computing [ ] Differences between IAAS/PAAS/SAAS [ ] ( Optional ) Enroll in the Cloud Computing Crash course 1 - Ask for a FREE coupon on Discord. NIST Definition of Cloud Computing The National Institute of Standards and Technology (NIST) defines cloud computing as: \"Cloud computing is a model for enabling ubiquitous, convenient, on-demand network access to a shared pool of configurable computing resources (e.g., networks, servers, storage, applications, and services) that can be rapidly provisioned and released with minimal management effort or service provider interaction. This cloud model is composed of five essential characteristics, three service models, and four deployment models.\" 2 The five essential characteristics of cloud computing according to NIST are: On-demand self-service Broad network access Resource pooling Rapid elasticity Measured service The three service models of cloud computing according to NIST are: Software as a Service (SaaS) Platform as a Service (PaaS) Infrastructure as a Service (IaaS) The four deployment models of cloud computing according to NIST are: Public cloud Private cloud Community cloud Hybrid cloud 5 Essential Characteristics 1. On-Demand Self-Service On-demand self-service allows users to provision computing resources, such as virtual machines, storage, and applications, automatically without requiring human intervention from the service provider. This enables users to quickly and easily access the resources they need to meet their business requirements. 2. Broad Network Access Broad network access enables users to access cloud computing resources over the Internet or other wide-area networks, using a range of devices, such as desktops, laptops, tablets, and smartphones. This allows users to access cloud computing resources from anywhere in the world, using any device with an Internet connection. 3. Resource Pooling Resource pooling allows cloud computing providers to serve multiple customers from a shared pool of computing resources. Providers can dynamically assign and reassign resources to customers as needed, based on their business requirements. This enables providers to maximize the efficiency and utilization of their computing resources, while providing customers with high availability and scalability. 4. Rapid Elasticity Rapid elasticity allows users to quickly and easily scale their computing resources up or down, based on their business requirements. This enables users to respond to changes in demand quickly and efficiently, without incurring the costs and complexity of maintaining their own computing infrastructure. 5. Measured Service Measured service enables users to pay only for the computing resources they use, on a pay-as-you-go basis. Providers can monitor and measure resource usage automatically, enabling users to pay only for the resources they consume, and to avoid upfront costs and long-term commitments. Cloud Computing deployment Models 1. Public Cloud Public cloud refers to cloud computing resources and services that are available to the general public over the Internet. Public cloud providers, such as Amazon Web Services, Microsoft Azure, and Google Cloud, offer a range of computing resources, including virtual machines, storage, databases, and applications, that users can access on a pay-as-you-go basis. 2. Private Cloud Private cloud refers to cloud computing resources and services that are dedicated to a single organization or business, and are not shared with other organizations or the general public. Private cloud resources are typically hosted on-premises or in a data center, and are managed and maintained by the organization's IT department. 3. Community Cloud Community cloud refers to cloud computing resources and services that are shared by a specific community of users, such as government agencies, educational institutions, or research organizations. Community cloud resources are typically designed to meet the specific needs of the community, and are managed and maintained by the community members. 4. Hybrid Cloud Hybrid cloud refers to a combination of two or more cloud computing deployment models, such as public cloud, private cloud, or community cloud. Hybrid cloud enables users to leverage the benefits of multiple cloud computing models, such as scalability and cost-effectiveness, while maintaining control over their sensitive data and applications. Cloud Computing Service Models Cloud computing is typically categorized into three models: 1. Infrastructure as a Service (IaaS) Provides users with access to computing infrastructure, such as virtual machines, storage, and networks, over the Internet. Users can deploy and manage their own software and applications on top of the IaaS infrastructure. 2. Platform as a Service (PaaS) Provides users with access to a platform for developing, deploying, and managing software and applications, without the need to manage the underlying infrastructure. PaaS provides users with a pre-configured environment for developing and deploying their software and applications. 3. Software as a Service (SaaS) Provides users with access to software applications and services over the Internet, without the need to install and manage the software locally. SaaS enables users to access software and services on a pay-as-you-go basis, without the need to invest in expensive software licenses. Cloud Computing Benefits Cloud computing offers several benefits to users, including: Scalability: Cloud computing enables users to scale their computing resources up or down based on their needs, allowing them to meet their changing business requirements and control costs effectively. Flexibility: Cloud computing provides users with the flexibility to choose the computing resources and services they need, without the need to invest in expensive hardware or software. Security: Cloud computing providers offer robust security features, such as encryption, firewalls, and identity and access management, to protect data and applications from unauthorized access and cyber threats. Reliability: Cloud computing providers offer high availability and fault tolerance, ensuring that applications and services are always up and running. Cost-effectiveness: Cloud computing offers pay-as-you-go pricing models, enabling users to pay only for the computing resources they use, and avoiding upfront costs and long-term commitments. List of Cloud Service Providers Amazon Web Services (AWS): https://aws.amazon.com/ Microsoft Azure: https://azure.microsoft.com/ Google Cloud Platform (GCP): https://cloud.google.com/ IBM Cloud: https://www.ibm.com/cloud Oracle Cloud: https://www.oracle.com/cloud/ Alibaba Cloud: https://www.alibabacloud.com/ DigitalOcean: https://www.digitalocean.com/ Rackspace: https://www.rackspace.com/ Salesforce: https://www.salesforce.com/cloud-computing/ VMware Cloud: https://www.vmware.com/cloud Heroku: https://www.heroku.com/ Linode: https://www.linode.com/ Red Hat OpenShift: https://www.openshift.com/ Digital Realty: https://www.digitalrealty.com/cloud SAP Cloud Platform: https://www.sap.com/products/cloud-platform.html Joyent: https://www.joyent.com/ CenturyLink Cloud: https://www.ctl.io/ OVHcloud: https://www.ovhcloud.com/ Tencent Cloud: https://intl.cloud.tencent.com/ Scaleway: https://www.scaleway.com/en/ Reference Links Cloud Computing & Cloud Native Fundamentals \u21a9 NIST SP 800-145 \u21a9","title":"Cloud Computing"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#cloud-computing","text":"","title":"Cloud Computing"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#day-2-goals","text":"[ ] Understand what are the differences between a private data center and Cloud [ ] Understand the NIST definition of Cloud Computing [ ] 5-4-3 Model of Cloud Computing [ ] Differences between IAAS/PAAS/SAAS [ ] ( Optional ) Enroll in the Cloud Computing Crash course 1 - Ask for a FREE coupon on Discord.","title":"Day 2 Goals"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#nist-definition-of-cloud-computing","text":"The National Institute of Standards and Technology (NIST) defines cloud computing as: \"Cloud computing is a model for enabling ubiquitous, convenient, on-demand network access to a shared pool of configurable computing resources (e.g., networks, servers, storage, applications, and services) that can be rapidly provisioned and released with minimal management effort or service provider interaction. This cloud model is composed of five essential characteristics, three service models, and four deployment models.\" 2 The five essential characteristics of cloud computing according to NIST are: On-demand self-service Broad network access Resource pooling Rapid elasticity Measured service The three service models of cloud computing according to NIST are: Software as a Service (SaaS) Platform as a Service (PaaS) Infrastructure as a Service (IaaS) The four deployment models of cloud computing according to NIST are: Public cloud Private cloud Community cloud Hybrid cloud","title":"NIST Definition of Cloud Computing"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#5-essential-characteristics","text":"","title":"5 Essential Characteristics"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#1-on-demand-self-service","text":"On-demand self-service allows users to provision computing resources, such as virtual machines, storage, and applications, automatically without requiring human intervention from the service provider. This enables users to quickly and easily access the resources they need to meet their business requirements.","title":"1. On-Demand Self-Service"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#2-broad-network-access","text":"Broad network access enables users to access cloud computing resources over the Internet or other wide-area networks, using a range of devices, such as desktops, laptops, tablets, and smartphones. This allows users to access cloud computing resources from anywhere in the world, using any device with an Internet connection.","title":"2. Broad Network Access"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#3-resource-pooling","text":"Resource pooling allows cloud computing providers to serve multiple customers from a shared pool of computing resources. Providers can dynamically assign and reassign resources to customers as needed, based on their business requirements. This enables providers to maximize the efficiency and utilization of their computing resources, while providing customers with high availability and scalability.","title":"3. Resource Pooling"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#4-rapid-elasticity","text":"Rapid elasticity allows users to quickly and easily scale their computing resources up or down, based on their business requirements. This enables users to respond to changes in demand quickly and efficiently, without incurring the costs and complexity of maintaining their own computing infrastructure.","title":"4. Rapid Elasticity"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#5-measured-service","text":"Measured service enables users to pay only for the computing resources they use, on a pay-as-you-go basis. Providers can monitor and measure resource usage automatically, enabling users to pay only for the resources they consume, and to avoid upfront costs and long-term commitments.","title":"5. Measured Service"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#cloud-computing-deployment-models","text":"","title":"Cloud Computing deployment Models"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#1-public-cloud","text":"Public cloud refers to cloud computing resources and services that are available to the general public over the Internet. Public cloud providers, such as Amazon Web Services, Microsoft Azure, and Google Cloud, offer a range of computing resources, including virtual machines, storage, databases, and applications, that users can access on a pay-as-you-go basis.","title":"1. Public Cloud"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#2-private-cloud","text":"Private cloud refers to cloud computing resources and services that are dedicated to a single organization or business, and are not shared with other organizations or the general public. Private cloud resources are typically hosted on-premises or in a data center, and are managed and maintained by the organization's IT department.","title":"2. Private Cloud"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#3-community-cloud","text":"Community cloud refers to cloud computing resources and services that are shared by a specific community of users, such as government agencies, educational institutions, or research organizations. Community cloud resources are typically designed to meet the specific needs of the community, and are managed and maintained by the community members.","title":"3. Community Cloud"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#4-hybrid-cloud","text":"Hybrid cloud refers to a combination of two or more cloud computing deployment models, such as public cloud, private cloud, or community cloud. Hybrid cloud enables users to leverage the benefits of multiple cloud computing models, such as scalability and cost-effectiveness, while maintaining control over their sensitive data and applications.","title":"4. Hybrid Cloud"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#cloud-computing-service-models","text":"Cloud computing is typically categorized into three models:","title":"Cloud Computing Service Models"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#1-infrastructure-as-a-service-iaas","text":"Provides users with access to computing infrastructure, such as virtual machines, storage, and networks, over the Internet. Users can deploy and manage their own software and applications on top of the IaaS infrastructure.","title":"1. Infrastructure as a Service (IaaS)"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#2-platform-as-a-service-paas","text":"Provides users with access to a platform for developing, deploying, and managing software and applications, without the need to manage the underlying infrastructure. PaaS provides users with a pre-configured environment for developing and deploying their software and applications.","title":"2. Platform as a Service (PaaS)"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#3-software-as-a-service-saas","text":"Provides users with access to software applications and services over the Internet, without the need to install and manage the software locally. SaaS enables users to access software and services on a pay-as-you-go basis, without the need to invest in expensive software licenses.","title":"3. Software as a Service (SaaS)"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#cloud-computing-benefits","text":"Cloud computing offers several benefits to users, including: Scalability: Cloud computing enables users to scale their computing resources up or down based on their needs, allowing them to meet their changing business requirements and control costs effectively. Flexibility: Cloud computing provides users with the flexibility to choose the computing resources and services they need, without the need to invest in expensive hardware or software. Security: Cloud computing providers offer robust security features, such as encryption, firewalls, and identity and access management, to protect data and applications from unauthorized access and cyber threats. Reliability: Cloud computing providers offer high availability and fault tolerance, ensuring that applications and services are always up and running. Cost-effectiveness: Cloud computing offers pay-as-you-go pricing models, enabling users to pay only for the computing resources they use, and avoiding upfront costs and long-term commitments.","title":"Cloud Computing Benefits"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#list-of-cloud-service-providers","text":"Amazon Web Services (AWS): https://aws.amazon.com/ Microsoft Azure: https://azure.microsoft.com/ Google Cloud Platform (GCP): https://cloud.google.com/ IBM Cloud: https://www.ibm.com/cloud Oracle Cloud: https://www.oracle.com/cloud/ Alibaba Cloud: https://www.alibabacloud.com/ DigitalOcean: https://www.digitalocean.com/ Rackspace: https://www.rackspace.com/ Salesforce: https://www.salesforce.com/cloud-computing/ VMware Cloud: https://www.vmware.com/cloud Heroku: https://www.heroku.com/ Linode: https://www.linode.com/ Red Hat OpenShift: https://www.openshift.com/ Digital Realty: https://www.digitalrealty.com/cloud SAP Cloud Platform: https://www.sap.com/products/cloud-platform.html Joyent: https://www.joyent.com/ CenturyLink Cloud: https://www.ctl.io/ OVHcloud: https://www.ovhcloud.com/ Tencent Cloud: https://intl.cloud.tencent.com/ Scaleway: https://www.scaleway.com/en/","title":"List of Cloud Service Providers"},{"location":"dailynotes/01_introduction/D2-Introduction-to-Cloud-Computing/#reference-links","text":"Cloud Computing & Cloud Native Fundamentals \u21a9 NIST SP 800-145 \u21a9","title":"Reference Links"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/","text":"Introduction to Virtualization, VPS and AWS Lightsail Day 3 Goals [ ] Understand the concept of Virtualization [ ] How virtualization enables cloud computing [ ] What is a Virtual Private Server (VPS) ? [ ] How VPS were part of web hosting solutions. [ ] Introduction to AWS Lightsail Virtualization Virtualization is a technology that enables the creation of multiple virtual versions of hardware and software resources, such as servers, operating systems, and storage devices, on a single physical machine. It allows users to run multiple operating systems and applications on a single physical machine, without having to purchase additional hardware or software resources. How Virtualization Works Virtualization works by using a software layer, called a hypervisor, to manage the allocation of physical resources to virtual machines. The hypervisor acts as a mediator between the virtual machines and the physical resources, allocating resources such as CPU, memory, and storage to each virtual machine as needed. Each virtual machine operates as if it were a separate physical machine, with its own operating system, applications, and network connectivity. Types of virtualization Server Virtualization Server virtualization is the most common type of virtualization, and involves partitioning a physical server into multiple virtual servers. Each virtual server operates as if it were a separate physical server, with its own operating system, applications, and network connectivity. Server virtualization can help organizations reduce hardware costs, improve resource utilization, and increase flexibility. Desktop Virtualization Desktop virtualization involves creating virtual desktops on a server, which can be accessed by end-users from their devices. Desktop virtualization can help organizations simplify desktop management, increase security, and reduce costs, by allowing users to access virtual desktops from any device, anywhere. Storage Virtualization Storage virtualization involves pooling multiple physical storage devices, such as hard drives and solid-state drives (SSDs), into a single virtual storage device. This virtual storage device can then be partitioned and allocated to different virtual machines or applications as needed. Storage virtualization can help organizations improve storage utilization, simplify storage management, and increase flexibility. Network Virtualization Network virtualization involves creating multiple virtual networks on a physical network infrastructure. Each virtual network operates as if it were a separate physical network, with its own network address space, routing tables, and access control policies. Network virtualization can help organizations improve network utilization, simplify network management, and increase flexibility. Hypervisor types There are two types of hypervisors: Type 1 Hypervisor Type 2 Hypervisor Runs directly on the physical hardware Runs on top of an existing operating system Provides direct access to physical hardware resources Uses the host operating system to access hardware resources Typically used in server virtualization scenarios Typically used in desktop virtualization scenarios Offers higher performance and better security than Type 2 hypervisors Offers lower performance and security than Type 1 hypervisors Examples include VMware ESXi, Microsoft Hyper-V, and Citrix XenServer Examples include Oracle VirtualBox, VMware Workstation, and Parallels Desktop Cloud computing and virtualization Cloud computing relies heavily on virtualization to provide users with scalable and cost-effective computing resources. By leveraging virtualization, cloud providers can provide users with flexible and dynamic computing environments that can be easily scaled up or down to meet changing business requirements. Some of the relevant AWS services which work using the Virtualization technology includes Elastic Compute Cloud (EC2): EC2 is a web service that provides resizable compute capacity in the cloud. EC2 uses virtualization to provide users with a scalable and cost-effective way to run applications on a virtual server. Users can choose from a variety of virtual machine instances with different CPU, memory, storage, and networking capacities, and can launch, stop, and terminate instances as needed. Lambda: AWS Lambda is a serverless computing service that allows users to run code without provisioning or managing servers. Lambda uses virtualization to provide users with a scalable and cost-effective way to run code in the cloud. Users simply upload their code to Lambda, and the service takes care of provisioning and scaling the necessary compute resources to run the code. Elastic Block Store (EBS): EBS is a high-performance block storage service that allows users to store persistent data for use with Amazon EC2 instances. EBS uses virtualization to provide users with a scalable and highly available way to store data in the cloud. Users can choose from a variety of EBS volume types with different performance characteristics, and can attach and detach volumes from EC2 instances as needed. Virtual Private Cloud (VPC): VPC is a virtual network service that allows users to provision a logically isolated section of the AWS Cloud. VPC uses virtualization to provide users with a secure and flexible way to launch AWS resources into a virtual network that they define. Users can configure the network topology, create subnets, and control inbound and outbound traffic to and from their AWS resources. Virtual Private Server (VPS) A Virtual Private Server (VPS) is a virtual machine that is hosted on a physical server, but operates as if it were a separate physical machine. VPS hosting is a popular hosting option for individuals and businesses that require more control and flexibility than shared hosting, but don't want the expense and complexity of dedicated hosting. A VPS hosting provider typically uses virtualization technology to partition a physical server into multiple virtual machines, each with its own operating system, applications, and resources. Users can typically customize the configuration of their VPS, including CPU, RAM, storage, and bandwidth, and can install any software or applications they require. Examples Amazon Web Services (AWS) Elastic Compute Cloud (EC2) DigitalOcean Linode Vultr Google Cloud Platform (GCP) Compute Engine AWS Lightsail AWS Lightsail is a simplified, easy-to-use cloud computing solution offered by Amazon Web Services (AWS). It provides users with a pre-configured virtual private server (VPS), storage, and networking capabilities, as well as a range of other features, all at an affordable price point. Features AWS Lightsail offers a range of features to help users easily deploy and manage their applications and websites, including: Pre-configured virtual private server (VPS) instances with a range of operating systems and applications, such as WordPress, Drupal, and Joomla. Integrated storage, including solid-state drives (SSD) and block storage. Networking capabilities, including static IP addresses, DNS management, and a firewall. Monitoring and alerting, including performance metrics and notifications. Automated backups and snapshots for easy recovery in case of data loss. Benefits AWS Lightsail offers several benefits to users, including: Ease of use: With pre-configured instances and an easy-to-use management console, AWS Lightsail makes it easy for users to deploy and manage their applications and websites. Affordability: AWS Lightsail is an affordable cloud computing solution, with pricing starting at just a few dollars per month. Scalability: AWS Lightsail instances can be easily scaled up or down to meet changing business requirements. Security: AWS Lightsail provides a range of security features, including a firewall and automated backups, to help users protect their data and applications. Integration with other AWS services: AWS Lightsail can be easily integrated with other AWS services, such as Amazon S3 and Amazon RDS. Reference Links \"What is Virtualization?\" VMware, Inc. https://www.vmware.com/topics/glossary/content/virtualization \"Virtualization: A beginner's guide,\" IBM. https://www.ibm.com/topics/virtualization \"Virtualization,\" Microsoft. https://docs.microsoft.com/en-us/virtualization/","title":"Introduction to Virtualization, VPS and AWS Lightsail"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#introduction-to-virtualization-vps-and-aws-lightsail","text":"","title":"Introduction to Virtualization, VPS and AWS Lightsail"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#day-3-goals","text":"[ ] Understand the concept of Virtualization [ ] How virtualization enables cloud computing [ ] What is a Virtual Private Server (VPS) ? [ ] How VPS were part of web hosting solutions. [ ] Introduction to AWS Lightsail","title":"Day 3 Goals"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#virtualization","text":"Virtualization is a technology that enables the creation of multiple virtual versions of hardware and software resources, such as servers, operating systems, and storage devices, on a single physical machine. It allows users to run multiple operating systems and applications on a single physical machine, without having to purchase additional hardware or software resources.","title":"Virtualization"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#how-virtualization-works","text":"Virtualization works by using a software layer, called a hypervisor, to manage the allocation of physical resources to virtual machines. The hypervisor acts as a mediator between the virtual machines and the physical resources, allocating resources such as CPU, memory, and storage to each virtual machine as needed. Each virtual machine operates as if it were a separate physical machine, with its own operating system, applications, and network connectivity.","title":"How Virtualization Works"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#types-of-virtualization","text":"","title":"Types of virtualization"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#server-virtualization","text":"Server virtualization is the most common type of virtualization, and involves partitioning a physical server into multiple virtual servers. Each virtual server operates as if it were a separate physical server, with its own operating system, applications, and network connectivity. Server virtualization can help organizations reduce hardware costs, improve resource utilization, and increase flexibility.","title":"Server Virtualization"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#desktop-virtualization","text":"Desktop virtualization involves creating virtual desktops on a server, which can be accessed by end-users from their devices. Desktop virtualization can help organizations simplify desktop management, increase security, and reduce costs, by allowing users to access virtual desktops from any device, anywhere.","title":"Desktop Virtualization"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#storage-virtualization","text":"Storage virtualization involves pooling multiple physical storage devices, such as hard drives and solid-state drives (SSDs), into a single virtual storage device. This virtual storage device can then be partitioned and allocated to different virtual machines or applications as needed. Storage virtualization can help organizations improve storage utilization, simplify storage management, and increase flexibility.","title":"Storage Virtualization"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#network-virtualization","text":"Network virtualization involves creating multiple virtual networks on a physical network infrastructure. Each virtual network operates as if it were a separate physical network, with its own network address space, routing tables, and access control policies. Network virtualization can help organizations improve network utilization, simplify network management, and increase flexibility.","title":"Network Virtualization"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#hypervisor-types","text":"There are two types of hypervisors: Type 1 Hypervisor Type 2 Hypervisor Runs directly on the physical hardware Runs on top of an existing operating system Provides direct access to physical hardware resources Uses the host operating system to access hardware resources Typically used in server virtualization scenarios Typically used in desktop virtualization scenarios Offers higher performance and better security than Type 2 hypervisors Offers lower performance and security than Type 1 hypervisors Examples include VMware ESXi, Microsoft Hyper-V, and Citrix XenServer Examples include Oracle VirtualBox, VMware Workstation, and Parallels Desktop","title":"Hypervisor types"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#cloud-computing-and-virtualization","text":"Cloud computing relies heavily on virtualization to provide users with scalable and cost-effective computing resources. By leveraging virtualization, cloud providers can provide users with flexible and dynamic computing environments that can be easily scaled up or down to meet changing business requirements. Some of the relevant AWS services which work using the Virtualization technology includes Elastic Compute Cloud (EC2): EC2 is a web service that provides resizable compute capacity in the cloud. EC2 uses virtualization to provide users with a scalable and cost-effective way to run applications on a virtual server. Users can choose from a variety of virtual machine instances with different CPU, memory, storage, and networking capacities, and can launch, stop, and terminate instances as needed. Lambda: AWS Lambda is a serverless computing service that allows users to run code without provisioning or managing servers. Lambda uses virtualization to provide users with a scalable and cost-effective way to run code in the cloud. Users simply upload their code to Lambda, and the service takes care of provisioning and scaling the necessary compute resources to run the code. Elastic Block Store (EBS): EBS is a high-performance block storage service that allows users to store persistent data for use with Amazon EC2 instances. EBS uses virtualization to provide users with a scalable and highly available way to store data in the cloud. Users can choose from a variety of EBS volume types with different performance characteristics, and can attach and detach volumes from EC2 instances as needed. Virtual Private Cloud (VPC): VPC is a virtual network service that allows users to provision a logically isolated section of the AWS Cloud. VPC uses virtualization to provide users with a secure and flexible way to launch AWS resources into a virtual network that they define. Users can configure the network topology, create subnets, and control inbound and outbound traffic to and from their AWS resources.","title":"Cloud computing and virtualization"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#virtual-private-server-vps","text":"A Virtual Private Server (VPS) is a virtual machine that is hosted on a physical server, but operates as if it were a separate physical machine. VPS hosting is a popular hosting option for individuals and businesses that require more control and flexibility than shared hosting, but don't want the expense and complexity of dedicated hosting. A VPS hosting provider typically uses virtualization technology to partition a physical server into multiple virtual machines, each with its own operating system, applications, and resources. Users can typically customize the configuration of their VPS, including CPU, RAM, storage, and bandwidth, and can install any software or applications they require. Examples Amazon Web Services (AWS) Elastic Compute Cloud (EC2) DigitalOcean Linode Vultr Google Cloud Platform (GCP) Compute Engine","title":"Virtual Private Server (VPS)"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#aws-lightsail","text":"AWS Lightsail is a simplified, easy-to-use cloud computing solution offered by Amazon Web Services (AWS). It provides users with a pre-configured virtual private server (VPS), storage, and networking capabilities, as well as a range of other features, all at an affordable price point.","title":"AWS Lightsail"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#features","text":"AWS Lightsail offers a range of features to help users easily deploy and manage their applications and websites, including: Pre-configured virtual private server (VPS) instances with a range of operating systems and applications, such as WordPress, Drupal, and Joomla. Integrated storage, including solid-state drives (SSD) and block storage. Networking capabilities, including static IP addresses, DNS management, and a firewall. Monitoring and alerting, including performance metrics and notifications. Automated backups and snapshots for easy recovery in case of data loss.","title":"Features"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#benefits","text":"AWS Lightsail offers several benefits to users, including: Ease of use: With pre-configured instances and an easy-to-use management console, AWS Lightsail makes it easy for users to deploy and manage their applications and websites. Affordability: AWS Lightsail is an affordable cloud computing solution, with pricing starting at just a few dollars per month. Scalability: AWS Lightsail instances can be easily scaled up or down to meet changing business requirements. Security: AWS Lightsail provides a range of security features, including a firewall and automated backups, to help users protect their data and applications. Integration with other AWS services: AWS Lightsail can be easily integrated with other AWS services, such as Amazon S3 and Amazon RDS.","title":"Benefits"},{"location":"dailynotes/01_introduction/D3-Introduction-to-Virtualization/#reference-links","text":"\"What is Virtualization?\" VMware, Inc. https://www.vmware.com/topics/glossary/content/virtualization \"Virtualization: A beginner's guide,\" IBM. https://www.ibm.com/topics/virtualization \"Virtualization,\" Microsoft. https://docs.microsoft.com/en-us/virtualization/","title":"Reference Links"},{"location":"dailynotes/02_lightsail/D4-Setting-up-VPS-on-Lightsail/","text":"Setting up a VPS on Amazon Lightsail Day 4 Goals [ ] Walkthrough of Amazon Lightsail account [ ] Understanding Blueprints [ ] Creating a new VPS using a LAMP Stack [ ] Connecting to the instance using web console Amazon Lightsail Dashboard Walkthrough The Amazon Lightsail dashboard is the main interface for managing your Lightsail resources. You'll see overview of your account, including information about your resources, billing, and notifications. options to manage your instances, databases, load balancers, DNS zones, and more. The Instances tab displays a list of your virtual private servers (VPS), including their current status, IP address, and region. The Databases tab displays a list of your managed databases, including their status, endpoint, and engine type. The Load Balancers tab displays a list of your load balancers, including their current status and endpoint. The Networking tab includes options to manage your DNS zones, create static IP addresses, and configure firewall rules. Understanding Blueprints A blueprint in Amazon Lightsail is a pre-configured template for launching a virtual private server (VPS) or an application, such as a content management system (CMS) or a web application framework. Blueprints are designed to simplify the process of launching a new instance by providing a pre-built configuration that includes the necessary software, settings, and services. Each blueprint includes a specific operating system, application stack, and server configuration, along with recommended settings for security, performance, and scalability. Lightsail offers a wide variety of blueprints for different use cases, including popular CMS platforms like WordPress, Drupal, and Joomla, as well as web application frameworks like Ruby on Rails, Node.js, and Django. Creating a new VPS Click the \"Create instance\" button in the top right corner of the dashboard. Select a blueprint for your instance. As of now use WordPress from Bitnami. Choose your instance plan. Enter a unique name for your instance, and select the region where you want to launch it. Click the \"Create instance\" button to launch your new VPS. Wait for Lightsail to provision your new instance. This may take a few minutes, depending on the size of your instance and the availability of resources in your selected region. Once your instance is ready, you can access it via the Lightsail console.","title":"Setting up a VPS on Amazon Lightsail"},{"location":"dailynotes/02_lightsail/D4-Setting-up-VPS-on-Lightsail/#setting-up-a-vps-on-amazon-lightsail","text":"","title":"Setting up a VPS on Amazon Lightsail"},{"location":"dailynotes/02_lightsail/D4-Setting-up-VPS-on-Lightsail/#day-4-goals","text":"[ ] Walkthrough of Amazon Lightsail account [ ] Understanding Blueprints [ ] Creating a new VPS using a LAMP Stack [ ] Connecting to the instance using web console","title":"Day 4 Goals"},{"location":"dailynotes/02_lightsail/D4-Setting-up-VPS-on-Lightsail/#amazon-lightsail-dashboard-walkthrough","text":"The Amazon Lightsail dashboard is the main interface for managing your Lightsail resources. You'll see overview of your account, including information about your resources, billing, and notifications. options to manage your instances, databases, load balancers, DNS zones, and more. The Instances tab displays a list of your virtual private servers (VPS), including their current status, IP address, and region. The Databases tab displays a list of your managed databases, including their status, endpoint, and engine type. The Load Balancers tab displays a list of your load balancers, including their current status and endpoint. The Networking tab includes options to manage your DNS zones, create static IP addresses, and configure firewall rules.","title":"Amazon Lightsail Dashboard Walkthrough"},{"location":"dailynotes/02_lightsail/D4-Setting-up-VPS-on-Lightsail/#understanding-blueprints","text":"A blueprint in Amazon Lightsail is a pre-configured template for launching a virtual private server (VPS) or an application, such as a content management system (CMS) or a web application framework. Blueprints are designed to simplify the process of launching a new instance by providing a pre-built configuration that includes the necessary software, settings, and services. Each blueprint includes a specific operating system, application stack, and server configuration, along with recommended settings for security, performance, and scalability. Lightsail offers a wide variety of blueprints for different use cases, including popular CMS platforms like WordPress, Drupal, and Joomla, as well as web application frameworks like Ruby on Rails, Node.js, and Django.","title":"Understanding Blueprints"},{"location":"dailynotes/02_lightsail/D4-Setting-up-VPS-on-Lightsail/#creating-a-new-vps","text":"Click the \"Create instance\" button in the top right corner of the dashboard. Select a blueprint for your instance. As of now use WordPress from Bitnami. Choose your instance plan. Enter a unique name for your instance, and select the region where you want to launch it. Click the \"Create instance\" button to launch your new VPS. Wait for Lightsail to provision your new instance. This may take a few minutes, depending on the size of your instance and the availability of resources in your selected region. Once your instance is ready, you can access it via the Lightsail console.","title":"Creating a new VPS"},{"location":"dailynotes/02_lightsail/D5-Connecting-with-SSH/","text":"Understanding SSH and how to connect to the instance Day 5 Goals [ ] Understanding Key exchanges [ ] Understanding SSH [ ] How SSH works [ ] Using the key pair to login to the instance What are the ways to authenticate? Username and password : This is the most common form of authentication. Users are required to enter a unique username and a secret password to gain access to a system or service. Two-factor authentication (2FA): 2FA adds an additional layer of security to username and password authentication by requiring a second factor, such as a code sent to a mobile device or a biometric identifier like a fingerprint Multi-factor authentication (MFA): MFA is similar to 2FA, but it requires multiple factors for authentication, such as a password, a code sent to a mobile device, and a biometric identifier. This method provides the highest level of security but can be more complex for users to use. Public key authentication : This method uses a public and private key pair to authenticate users. The user's public key is stored on the server, and the user must use their private key to log in. This method is commonly used in SSH and HTTPS connections. Single sign-on (SSO) : SSO allows users to log in to multiple applications or systems using a single set of credentials. This method is convenient for users but can increase the risk of a security breach if the credentials are compromised. What is SSH? SSH (Secure Shell) is a network protocol that allows users to securely connect to remote servers over an unsecured network. SSH uses a public-private key pair to authenticate users and encrypt communications. The public key is stored on the server, while the private key is kept on the user's local machine. To establish an SSH connection, the client sends a request to the server, which responds with its public key. The client uses the server's public key to encrypt a random session key, which is sent to the server. The server decrypts the session key using its private key, and the client and server use the session key to encrypt and decrypt communications. SSH also supports port forwarding, which allows users to securely tunnel traffic between local and remote machines. There are several SSH clients available, including OpenSSH, PuTTY, and WinSCP. To use SSH, users must generate a public-private key pair using a key generation tool, such as ssh-keygen. SSH keys should be protected with a passphrase to prevent unauthorized access. How key-exchange works? The client initiates an SSH connection request to the server. The server responds with its public key, along with a list of supported key exchange algorithms and encryption algorithms. The client checks the server's public key against its known hosts file to verify its authenticity. If the key is not found, the client prompts the user to confirm the key fingerprint before proceeding. The client generates a random session key, encrypts it with the server's public key, and sends it to the server. The server decrypts the session key using its private key, and sends an acknowledgement to the client. The client and server use the session key to encrypt and decrypt communications for the duration of the SSH session. Key-pairs in Amazon This is how key-pairs work with Amazon 1 2 Amazon Lightsail is just like EC2 instances which use key pairs for authentication and to encrypt and decrypt login information. A key pair consists of a public key, which is stored on the instance, and a private key, which is stored on the user's local machine. When you launch an instance, you can specify a new key pair or use an existing one. If you lose your private key, you cannot log in to your instance unless you have a backup. To create a key pair, you can use the AWS Management Console, the AWS CLI, or a third-party tool. You should keep your private key secure and never share it with anyone. You can use different key pairs for different instances or groups of instances. To connect to your instance using SSH, you must specify the path to your private key file and the username for your instance. You can use the AWS CLI or third-party tools to manage your key pairs, such as importing or exporting keys. As an alternative to key pairs, you can use AWS Systems Manager Session Manager to connect to your instance with an interactive one-click browser-based shell or the AWS Command Line Interface (AWS CLI). If you need to share access to your instances, you can use AWS Identity and Access Management (IAM) to create and manage users and groups with specific permissions. References (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html) \u21a9 (https://lightsail.aws.amazon.com/ls/docs/en_us/articles/understanding-ssh-in-amazon-lightsail) \u21a9","title":"Understanding SSH and how to connect to the instance"},{"location":"dailynotes/02_lightsail/D5-Connecting-with-SSH/#understanding-ssh-and-how-to-connect-to-the-instance","text":"","title":"Understanding SSH and how to connect to the instance"},{"location":"dailynotes/02_lightsail/D5-Connecting-with-SSH/#day-5-goals","text":"[ ] Understanding Key exchanges [ ] Understanding SSH [ ] How SSH works [ ] Using the key pair to login to the instance","title":"Day 5 Goals"},{"location":"dailynotes/02_lightsail/D5-Connecting-with-SSH/#what-are-the-ways-to-authenticate","text":"Username and password : This is the most common form of authentication. Users are required to enter a unique username and a secret password to gain access to a system or service. Two-factor authentication (2FA): 2FA adds an additional layer of security to username and password authentication by requiring a second factor, such as a code sent to a mobile device or a biometric identifier like a fingerprint Multi-factor authentication (MFA): MFA is similar to 2FA, but it requires multiple factors for authentication, such as a password, a code sent to a mobile device, and a biometric identifier. This method provides the highest level of security but can be more complex for users to use. Public key authentication : This method uses a public and private key pair to authenticate users. The user's public key is stored on the server, and the user must use their private key to log in. This method is commonly used in SSH and HTTPS connections. Single sign-on (SSO) : SSO allows users to log in to multiple applications or systems using a single set of credentials. This method is convenient for users but can increase the risk of a security breach if the credentials are compromised.","title":"What are the ways to authenticate?"},{"location":"dailynotes/02_lightsail/D5-Connecting-with-SSH/#what-is-ssh","text":"SSH (Secure Shell) is a network protocol that allows users to securely connect to remote servers over an unsecured network. SSH uses a public-private key pair to authenticate users and encrypt communications. The public key is stored on the server, while the private key is kept on the user's local machine. To establish an SSH connection, the client sends a request to the server, which responds with its public key. The client uses the server's public key to encrypt a random session key, which is sent to the server. The server decrypts the session key using its private key, and the client and server use the session key to encrypt and decrypt communications. SSH also supports port forwarding, which allows users to securely tunnel traffic between local and remote machines. There are several SSH clients available, including OpenSSH, PuTTY, and WinSCP. To use SSH, users must generate a public-private key pair using a key generation tool, such as ssh-keygen. SSH keys should be protected with a passphrase to prevent unauthorized access.","title":"What is SSH?"},{"location":"dailynotes/02_lightsail/D5-Connecting-with-SSH/#how-key-exchange-works","text":"The client initiates an SSH connection request to the server. The server responds with its public key, along with a list of supported key exchange algorithms and encryption algorithms. The client checks the server's public key against its known hosts file to verify its authenticity. If the key is not found, the client prompts the user to confirm the key fingerprint before proceeding. The client generates a random session key, encrypts it with the server's public key, and sends it to the server. The server decrypts the session key using its private key, and sends an acknowledgement to the client. The client and server use the session key to encrypt and decrypt communications for the duration of the SSH session.","title":"How key-exchange works?"},{"location":"dailynotes/02_lightsail/D5-Connecting-with-SSH/#key-pairs-in-amazon","text":"This is how key-pairs work with Amazon 1 2 Amazon Lightsail is just like EC2 instances which use key pairs for authentication and to encrypt and decrypt login information. A key pair consists of a public key, which is stored on the instance, and a private key, which is stored on the user's local machine. When you launch an instance, you can specify a new key pair or use an existing one. If you lose your private key, you cannot log in to your instance unless you have a backup. To create a key pair, you can use the AWS Management Console, the AWS CLI, or a third-party tool. You should keep your private key secure and never share it with anyone. You can use different key pairs for different instances or groups of instances. To connect to your instance using SSH, you must specify the path to your private key file and the username for your instance. You can use the AWS CLI or third-party tools to manage your key pairs, such as importing or exporting keys. As an alternative to key pairs, you can use AWS Systems Manager Session Manager to connect to your instance with an interactive one-click browser-based shell or the AWS Command Line Interface (AWS CLI). If you need to share access to your instances, you can use AWS Identity and Access Management (IAM) to create and manage users and groups with specific permissions.","title":"Key-pairs in Amazon"},{"location":"dailynotes/02_lightsail/D5-Connecting-with-SSH/#references","text":"(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html) \u21a9 (https://lightsail.aws.amazon.com/ls/docs/en_us/articles/understanding-ssh-in-amazon-lightsail) \u21a9","title":"References"},{"location":"dailynotes/02_lightsail/D6-Managing-Lightsail-instances/","text":"Managing your Lightsail instance Day 6 Goals [ ] Understanding more about the Lightsail instance [ ] Installing software on your instance [ ] Managing your Instance [ ] Monitoring the instance. [ ] Understand Burstable instances Understanding more about the Lightsail instance Use snapshots to backup your instance: Creating instance snapshots is an easy and effective way to backup your instance data and configuration. Use DNS to manage your instance: Amazon Lightsail includes a DNS service that you can use to manage your instance's domain name and DNS records. Use the Lightsail firewall for security: The Lightsail firewall provides a simple way to control inbound and outbound traffic to your instance. Use instance metadata for automation: Amazon Lightsail instances include metadata that you can use to automate tasks and configure your instance. Installing WordPress on your instance Download WordPress & Unpack it wget https://wordpress.org/latest.tar.gz tar -xzvf latest.tar.gz Create the Database mysql -u root -p CREATE DATABASE wordpress ; Configure the DB cp wp-config-sample.php wp-config.php vi wp-config.php Define the config define ( 'DB_NAME' , 'wordpress' ); define ( 'DB_USER' , 'wordpressuser' ); define ( 'DB_PASSWORD' , 'password' ); define ( 'DB_HOST' , 'localhost' ); Change the permissions and restart Apache sudo chown -R www-data:www-data /var/www/html/wordpress/ sudo chmod -R 755 /var/www/html/wordpress/ sudo service apache2 restart Burstable instance Burstable instances are based on the T instance family, which provides a baseline level of CPU performance and a burstable CPU capability. The baseline performance is measured in CPU credits, which accumulate over time when the instance is idle or underutilized. When the instance requires more CPU performance than the baseline, it can use the accumulated CPU credits to burst above the baseline for short periods of time. 1 2 When the CPU usage returns to baseline levels, the instance begins accumulating CPU credits again. Think of a burstable instance like a car with a hybrid engine. The electric motor provides a baseline level of power and efficiency, while the gas engine provides extra power when needed. When you're driving in the city, the car relies mostly on the electric motor for steady performance and fuel efficiency. But when you need to accelerate quickly to merge onto the highway, the gas engine kicks in to provide extra power for a short burst. To test we are going to use Apache benchmarking ab -n 200 -c 20 http://localhost References (https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-viewing-instance-burst-capacity) \u21a9 (https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-viewing-instance-burst-capacity#viewing-instance-burst-capacity) \u21a9","title":"Managing your Lightsail instance"},{"location":"dailynotes/02_lightsail/D6-Managing-Lightsail-instances/#managing-your-lightsail-instance","text":"","title":"Managing your Lightsail instance"},{"location":"dailynotes/02_lightsail/D6-Managing-Lightsail-instances/#day-6-goals","text":"[ ] Understanding more about the Lightsail instance [ ] Installing software on your instance [ ] Managing your Instance [ ] Monitoring the instance. [ ] Understand Burstable instances","title":"Day 6 Goals"},{"location":"dailynotes/02_lightsail/D6-Managing-Lightsail-instances/#understanding-more-about-the-lightsail-instance","text":"Use snapshots to backup your instance: Creating instance snapshots is an easy and effective way to backup your instance data and configuration. Use DNS to manage your instance: Amazon Lightsail includes a DNS service that you can use to manage your instance's domain name and DNS records. Use the Lightsail firewall for security: The Lightsail firewall provides a simple way to control inbound and outbound traffic to your instance. Use instance metadata for automation: Amazon Lightsail instances include metadata that you can use to automate tasks and configure your instance.","title":"Understanding more about the Lightsail instance"},{"location":"dailynotes/02_lightsail/D6-Managing-Lightsail-instances/#installing-wordpress-on-your-instance","text":"Download WordPress & Unpack it wget https://wordpress.org/latest.tar.gz tar -xzvf latest.tar.gz Create the Database mysql -u root -p CREATE DATABASE wordpress ; Configure the DB cp wp-config-sample.php wp-config.php vi wp-config.php Define the config define ( 'DB_NAME' , 'wordpress' ); define ( 'DB_USER' , 'wordpressuser' ); define ( 'DB_PASSWORD' , 'password' ); define ( 'DB_HOST' , 'localhost' ); Change the permissions and restart Apache sudo chown -R www-data:www-data /var/www/html/wordpress/ sudo chmod -R 755 /var/www/html/wordpress/ sudo service apache2 restart","title":"Installing WordPress on your instance"},{"location":"dailynotes/02_lightsail/D6-Managing-Lightsail-instances/#burstable-instance","text":"Burstable instances are based on the T instance family, which provides a baseline level of CPU performance and a burstable CPU capability. The baseline performance is measured in CPU credits, which accumulate over time when the instance is idle or underutilized. When the instance requires more CPU performance than the baseline, it can use the accumulated CPU credits to burst above the baseline for short periods of time. 1 2 When the CPU usage returns to baseline levels, the instance begins accumulating CPU credits again. Think of a burstable instance like a car with a hybrid engine. The electric motor provides a baseline level of power and efficiency, while the gas engine provides extra power when needed. When you're driving in the city, the car relies mostly on the electric motor for steady performance and fuel efficiency. But when you need to accelerate quickly to merge onto the highway, the gas engine kicks in to provide extra power for a short burst. To test we are going to use Apache benchmarking ab -n 200 -c 20 http://localhost","title":"Burstable instance"},{"location":"dailynotes/02_lightsail/D6-Managing-Lightsail-instances/#references","text":"(https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-viewing-instance-burst-capacity) \u21a9 (https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-viewing-instance-burst-capacity#viewing-instance-burst-capacity) \u21a9","title":"References"},{"location":"dailynotes/02_lightsail/D7-IP_Addresses/","text":"IP addressing in Amazon lightsail Day 7 Goals [ ] What is IP addresses? [ ] IPv4 vs IPv6 [ ] What is NAT? [ ] How IP networking works in Cloud [ ] Types of IP addresses What is IP address? An IP address is a unique identifier that's used to identify devices on a network. IP addresses are made up of a series of numbers separated by periods, like 192.168.0.1. There are two types of IP addresses: IPv4 and IPv6. IPv4 addresses are the most common and are made up of four sets of numbers between 0 and 255. IPv6 addresses are newer and use a longer format that includes letters and numbers. Every device on a network needs a unique IP address to communicate with other devices. IP addresses are assigned by a network administrator or automatically by a device. Private IP addresses are used for communication within a local network, while public IP addresses are used for communication over the internet. IP addresses can be static (never change) or dynamic (assigned automatically and can change over time). Private IP addresses in each classes are as follows Class A: 10.0.0.0 to 10.255.255.255 Class B: 172.16.0.0 to 172.31.255.255 Class C: 192.168.0.0 to 192.168.255.255 IPv4 vs IPv6 IPv4 IPv6 32-bit address 128-bit address Addresses are in decimal format Addresses are in hexadecimal format Supports up to 4.3 billion unique addresses Supports up to 3.4 x 10^38 unique addresses Uses ARP to map IP addresses to MAC addresses Uses ICMPv6 Neighbor Discovery to map IP addresses to MAC addresses No built-in security features Built-in support for IPSec security Header contains 13 fields Header contains 8 fields Header does not identify packet flow for QoS handling by routers Header includes flow label for QoS handling by routers Fragments packets for reassembly by hosts Does not fragment packets IPv4 options are rarely used IPv6 options are more commonly used for mobility, quality of service, and routing Classful addressing Classless addressing What is NAT? NAT is a technique used to share a single public IP address across multiple devices on a private network. NAT can be compared to a local Wi-Fi router, where devices on a local network are assigned private IP addresses. When a device on the local network wants to communicate with a resource on the internet, the router uses NAT to translate the private IP address of the device to the public IP address assigned by the ISP. This allows the device to communicate with the resource on the internet while still keeping its private IP address hidden from the outside world. When the resource on the internet sends a response back to the device, the router uses NAT to translate the public IP address back to the private IP address of the device using following methods Static NAT: In this type of NAT, a one-to-one mapping is created between a public IP address and a private IP address. This is useful when you have a single device that needs to be accessible from the internet. Dynamic NAT: In dynamic NAT, a pool of public IP addresses is assigned to a group of private IP addresses. When a device on the private network sends a request to the internet, a public IP address is dynamically assigned from the pool and mapped to the private IP address of the device. Overloading NAT (or PAT): In this type of NAT, a single public IP address is shared by multiple devices on the private network. Each device is assigned a unique port number that is used to map incoming traffic from the public IP address to the correct device on the private network. Destination NAT: This type of NAT is used to forward traffic from a public IP address to a private IP address, based on the destination IP address of the incoming traffic. How IP addressing works in Lightsail When you create an instance in Lightsail, it is assigned a private IP address that is only accessible within a private network Each instance is assigned a private IP address by default, which is used for internal communication between instances and services within your account. In Amazon Lightsail, a public IP address is attached to a private IP address through the use of Network Address Translation (NAT). To make your instance accessible from the internet, you need to associate a public IP address with it. The NAT system in the network infrastructure automatically maps the public IP address to the private IP address. This allows traffic to be routed from the internet to your instance using the public IP address. By using NAT to associate a public IP address with your instance's private IP address, you can enable internet connectivity for your instance while still keeping it protected within your VPC network. You can assign a public IP address to your instance, which can be used to access your instance over the internet. This can be useful if you want to host a website or other internet-facing application. There are two types of public IP addresses available in Lightsail: static and dynamic. A static IP address remains the same for the lifetime of your instance, while a dynamic IP address can change if you stop and start your instance. Creating a Static IP To allocate a static IP address to your instance by navigating to the Networking tab in the Lightsail console and selecting \"Create static IP.\" Once you have a static IP address, you can associate it with your instance to ensure that it remains the same even if you stop and start your instance. It's important to note that there may be additional charges for using a static IP address in Lightsail, so be sure to check the pricing details before enabling this feature.","title":"IP addressing in Amazon lightsail"},{"location":"dailynotes/02_lightsail/D7-IP_Addresses/#ip-addressing-in-amazon-lightsail","text":"","title":"IP addressing in Amazon lightsail"},{"location":"dailynotes/02_lightsail/D7-IP_Addresses/#day-7-goals","text":"[ ] What is IP addresses? [ ] IPv4 vs IPv6 [ ] What is NAT? [ ] How IP networking works in Cloud [ ] Types of IP addresses","title":"Day 7 Goals"},{"location":"dailynotes/02_lightsail/D7-IP_Addresses/#what-is-ip-address","text":"An IP address is a unique identifier that's used to identify devices on a network. IP addresses are made up of a series of numbers separated by periods, like 192.168.0.1. There are two types of IP addresses: IPv4 and IPv6. IPv4 addresses are the most common and are made up of four sets of numbers between 0 and 255. IPv6 addresses are newer and use a longer format that includes letters and numbers. Every device on a network needs a unique IP address to communicate with other devices. IP addresses are assigned by a network administrator or automatically by a device. Private IP addresses are used for communication within a local network, while public IP addresses are used for communication over the internet. IP addresses can be static (never change) or dynamic (assigned automatically and can change over time). Private IP addresses in each classes are as follows Class A: 10.0.0.0 to 10.255.255.255 Class B: 172.16.0.0 to 172.31.255.255 Class C: 192.168.0.0 to 192.168.255.255","title":"What is IP address?"},{"location":"dailynotes/02_lightsail/D7-IP_Addresses/#ipv4-vs-ipv6","text":"IPv4 IPv6 32-bit address 128-bit address Addresses are in decimal format Addresses are in hexadecimal format Supports up to 4.3 billion unique addresses Supports up to 3.4 x 10^38 unique addresses Uses ARP to map IP addresses to MAC addresses Uses ICMPv6 Neighbor Discovery to map IP addresses to MAC addresses No built-in security features Built-in support for IPSec security Header contains 13 fields Header contains 8 fields Header does not identify packet flow for QoS handling by routers Header includes flow label for QoS handling by routers Fragments packets for reassembly by hosts Does not fragment packets IPv4 options are rarely used IPv6 options are more commonly used for mobility, quality of service, and routing Classful addressing Classless addressing","title":"IPv4 vs IPv6"},{"location":"dailynotes/02_lightsail/D7-IP_Addresses/#what-is-nat","text":"NAT is a technique used to share a single public IP address across multiple devices on a private network. NAT can be compared to a local Wi-Fi router, where devices on a local network are assigned private IP addresses. When a device on the local network wants to communicate with a resource on the internet, the router uses NAT to translate the private IP address of the device to the public IP address assigned by the ISP. This allows the device to communicate with the resource on the internet while still keeping its private IP address hidden from the outside world. When the resource on the internet sends a response back to the device, the router uses NAT to translate the public IP address back to the private IP address of the device using following methods Static NAT: In this type of NAT, a one-to-one mapping is created between a public IP address and a private IP address. This is useful when you have a single device that needs to be accessible from the internet. Dynamic NAT: In dynamic NAT, a pool of public IP addresses is assigned to a group of private IP addresses. When a device on the private network sends a request to the internet, a public IP address is dynamically assigned from the pool and mapped to the private IP address of the device. Overloading NAT (or PAT): In this type of NAT, a single public IP address is shared by multiple devices on the private network. Each device is assigned a unique port number that is used to map incoming traffic from the public IP address to the correct device on the private network. Destination NAT: This type of NAT is used to forward traffic from a public IP address to a private IP address, based on the destination IP address of the incoming traffic.","title":"What is NAT?"},{"location":"dailynotes/02_lightsail/D7-IP_Addresses/#how-ip-addressing-works-in-lightsail","text":"When you create an instance in Lightsail, it is assigned a private IP address that is only accessible within a private network Each instance is assigned a private IP address by default, which is used for internal communication between instances and services within your account. In Amazon Lightsail, a public IP address is attached to a private IP address through the use of Network Address Translation (NAT). To make your instance accessible from the internet, you need to associate a public IP address with it. The NAT system in the network infrastructure automatically maps the public IP address to the private IP address. This allows traffic to be routed from the internet to your instance using the public IP address. By using NAT to associate a public IP address with your instance's private IP address, you can enable internet connectivity for your instance while still keeping it protected within your VPC network. You can assign a public IP address to your instance, which can be used to access your instance over the internet. This can be useful if you want to host a website or other internet-facing application. There are two types of public IP addresses available in Lightsail: static and dynamic. A static IP address remains the same for the lifetime of your instance, while a dynamic IP address can change if you stop and start your instance.","title":"How IP addressing works in Lightsail"},{"location":"dailynotes/02_lightsail/D7-IP_Addresses/#creating-a-static-ip","text":"To allocate a static IP address to your instance by navigating to the Networking tab in the Lightsail console and selecting \"Create static IP.\" Once you have a static IP address, you can associate it with your instance to ensure that it remains the same even if you stop and start your instance. It's important to note that there may be additional charges for using a static IP address in Lightsail, so be sure to check the pricing details before enabling this feature.","title":"Creating a Static IP"}]}