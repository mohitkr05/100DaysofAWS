Resources:
  # Security Group for Load Balancer
  LoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access on port 80
      VpcId: vpc-03aecb868688eaf6c
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # Launch Template for Auto Scaling Group
  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-0dee22c13ea7a9a67
        InstanceType: t2.micro
        KeyName: awsbootcamp2 
        SecurityGroupIds:
          - sg-04b064fc67e775619
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo apt-get update
            sudo apt-get install -y nginx
            sudo systemctl start nginx
            sudo systemctl enable nginx
            sudo chown ubuntu:ubuntu /var/www/html
            echo "Hello World from $(hostname -f)" > /var/www/html/index.html

  # Application Load Balancer
  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "my-load-balancer"
      Subnets:
        - subnet-0573b9bbf738764dc
        - subnet-0a6edcb72438ffa20
      SecurityGroups:
        - !Ref LoadBalancerSG
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'

  # Target Group for the Load Balancer
  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: "my-target-group"
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      VpcId: vpc-03aecb868688eaf6c
      TargetType: instance

  # Listener for the Load Balancer
  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyTargetGroup
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: HTTP

  # Auto Scaling Group
  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: my-auto-scaling-group
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: !GetAtt MyLaunchTemplate.LatestVersionNumber
      MinSize: '1'
      MaxSize: '3'
      DesiredCapacity: '2'
      VPCZoneIdentifier:
        - subnet-0d7a15263c9697eda
        - subnet-00436497911f61ca5
      TargetGroupARNs:
        - !Ref MyTargetGroup

  # Auto Scaling Policy (optional, for scaling based on CPU utilization)
  MyScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref MyAutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 50.0  # Targeting 50% CPU usage
